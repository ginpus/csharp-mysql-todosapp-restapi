{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "AllowedHosts": "*",
  "ConnectionStrings": {
    "SqlConnectionString": "server=localhost;port=3306;user id=test;password=test;database=todosdb",
    "SomethingToBeChangedWithoutCodeChange": "ChangeMe"
  },
  "ApiKeySettings": {
    "ExpirationTimeInMinutes": 60
  },
  //2. Create a class under Options: public class ApiKeySettings { public in ExpirationTimeInMinutes { "get;" "set;" }}
  //3. Into Startup under ConfigurationServices: services.Configure<ApiKeySettings>(Configuration.GetSection("ApiKeySettings"));
  //4. Inject in controller the settings and add parameter: 
  //4.1. Adding as property: private readonly ApiKeySettings _apiKeySettings;
  //4.2. Injecting into constructor: public ApiKeysController(IApiKeysRepository apiKeysRepository, IOptions<ApiKeySettings> apiKeySettings)
  //4.3. Asigning value under constructor: _apiKeySettings = apiKeySettings.Value;
  //4.4. Inserting property while creating an object: ExpirationDate = DateTime.Now.AddMinutes(_apiKeySettings.ExpirationTimeInMinutes)
  "SessionKeySettings": {
    "ExpirationTimeInMinutes": 15
  }
}